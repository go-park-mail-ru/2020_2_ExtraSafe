// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/go-park-mail-ru/2020_2_ExtraSafe/internal/services/auth (interfaces: UserStorage)

// Package mock is a generated GoMock package.
package mock

import (
	models "github.com/go-park-mail-ru/2020_2_ExtraSafe/internal/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUserStorage is a mock of UserStorage interface
type MockUserStorage struct {
	ctrl     *gomock.Controller
	recorder *MockUserStorageMockRecorder
}

// MockUserStorageMockRecorder is the mock recorder for MockUserStorage
type MockUserStorageMockRecorder struct {
	mock *MockUserStorage
}

// NewMockUserStorage creates a new mock instance
func NewMockUserStorage(ctrl *gomock.Controller) *MockUserStorage {
	mock := &MockUserStorage{ctrl: ctrl}
	mock.recorder = &MockUserStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserStorage) EXPECT() *MockUserStorageMockRecorder {
	return m.recorder
}

// CheckUser mocks base method
func (m *MockUserStorage) CheckUser(arg0 models.UserInputLogin) (uint64, models.UserOutside, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckUser", arg0)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(models.UserOutside)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CheckUser indicates an expected call of CheckUser
func (mr *MockUserStorageMockRecorder) CheckUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckUser", reflect.TypeOf((*MockUserStorage)(nil).CheckUser), arg0)
}

// CreateUser mocks base method
func (m *MockUserStorage) CreateUser(arg0 models.UserInputReg) (uint64, models.UserOutside, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(models.UserOutside)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateUser indicates an expected call of CreateUser
func (mr *MockUserStorageMockRecorder) CreateUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockUserStorage)(nil).CreateUser), arg0)
}

// GetUserAccounts mocks base method
func (m *MockUserStorage) GetUserAccounts(arg0 models.UserInput) (models.UserOutside, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserAccounts", arg0)
	ret0, _ := ret[0].(models.UserOutside)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserAccounts indicates an expected call of GetUserAccounts
func (mr *MockUserStorageMockRecorder) GetUserAccounts(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserAccounts", reflect.TypeOf((*MockUserStorage)(nil).GetUserAccounts), arg0)
}

// GetUserProfile mocks base method
func (m *MockUserStorage) GetUserProfile(arg0 models.UserInput) (models.UserOutside, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserProfile", arg0)
	ret0, _ := ret[0].(models.UserOutside)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserProfile indicates an expected call of GetUserProfile
func (mr *MockUserStorageMockRecorder) GetUserProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserProfile", reflect.TypeOf((*MockUserStorage)(nil).GetUserProfile), arg0)
}
