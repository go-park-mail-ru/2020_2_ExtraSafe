// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/go-park-mail-ru/2020_2_ExtraSafe/internal/storages/boardStorage (interfaces: CardsStorage)

// Package mock is a generated GoMock package.
package mock

import (
	models "github.com/go-park-mail-ru/2020_2_ExtraSafe/internal/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCardsStorage is a mock of CardsStorage interface
type MockCardsStorage struct {
	ctrl     *gomock.Controller
	recorder *MockCardsStorageMockRecorder
}

// MockCardsStorageMockRecorder is the mock recorder for MockCardsStorage
type MockCardsStorageMockRecorder struct {
	mock *MockCardsStorage
}

// NewMockCardsStorage creates a new mock instance
func NewMockCardsStorage(ctrl *gomock.Controller) *MockCardsStorage {
	mock := &MockCardsStorage{ctrl: ctrl}
	mock.recorder = &MockCardsStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCardsStorage) EXPECT() *MockCardsStorageMockRecorder {
	return m.recorder
}

// ChangeCard mocks base method
func (m *MockCardsStorage) ChangeCard(arg0 models.CardInput) (models.CardInternal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeCard", arg0)
	ret0, _ := ret[0].(models.CardInternal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ChangeCard indicates an expected call of ChangeCard
func (mr *MockCardsStorageMockRecorder) ChangeCard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeCard", reflect.TypeOf((*MockCardsStorage)(nil).ChangeCard), arg0)
}

// ChangeCardOrder mocks base method
func (m *MockCardsStorage) ChangeCardOrder(arg0 models.CardsOrderInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeCardOrder", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ChangeCardOrder indicates an expected call of ChangeCardOrder
func (mr *MockCardsStorageMockRecorder) ChangeCardOrder(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeCardOrder", reflect.TypeOf((*MockCardsStorage)(nil).ChangeCardOrder), arg0)
}

// CreateCard mocks base method
func (m *MockCardsStorage) CreateCard(cardInput models.CardInput) (models.CardOutside, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCard", arg0)
	ret0, _ := ret[0].(models.CardInternal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCard indicates an expected call of CreateCard
func (mr *MockCardsStorageMockRecorder) CreateCard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCard", reflect.TypeOf((*MockCardsStorage)(nil).CreateCard), arg0)
}

// DeleteCard mocks base method
func (m *MockCardsStorage) DeleteCard(arg0 models.CardInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCard", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCard indicates an expected call of DeleteCard
func (mr *MockCardsStorageMockRecorder) DeleteCard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCard", reflect.TypeOf((*MockCardsStorage)(nil).DeleteCard), arg0)
}

// GetCardByID mocks base method
func (m *MockCardsStorage) GetCardByID(arg0 models.CardInput) (models.CardInternal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCardByID", arg0)
	ret0, _ := ret[0].(models.CardInternal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCardByID indicates an expected call of GetCardByID
func (mr *MockCardsStorageMockRecorder) GetCardByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCardByID", reflect.TypeOf((*MockCardsStorage)(nil).GetCardByID), arg0)
}

// GetCardsByBoard mocks base method
func (m *MockCardsStorage) GetCardsByBoard(arg0 models.BoardInput) ([]models.CardInternal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCardsByBoard", arg0)
	ret0, _ := ret[0].([]models.CardInternal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCardsByBoard indicates an expected call of GetCardsByBoard
func (mr *MockCardsStorageMockRecorder) GetCardsByBoard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCardsByBoard", reflect.TypeOf((*MockCardsStorage)(nil).GetCardsByBoard), arg0)
}
