// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: board/board.proto

// protoc --go_out=plugins=grpc:. *.proto

package protoBoard

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	profile "github.com/go-park-mail-ru/2020_2_ExtraSafe/services/proto/profile"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BoardChangeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    uint64 `protobuf:"varint,1,opt,name=UserID,json=userID,proto3" json:"UserID,omitempty"`
	BoardID   uint64 `protobuf:"varint,2,opt,name=BoardID,json=boardID,proto3" json:"BoardID,omitempty"`
	BoardName string `protobuf:"bytes,3,opt,name=BoardName,json=boardName,proto3" json:"BoardName,omitempty"`
	Theme     string `protobuf:"bytes,4,opt,name=Theme,json=theme,proto3" json:"Theme,omitempty"`
	Star      bool   `protobuf:"varint,5,opt,name=Star,json=star,proto3" json:"Star,omitempty"`
}

func (x *BoardChangeInput) Reset() {
	*x = BoardChangeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_board_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoardChangeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardChangeInput) ProtoMessage() {}

func (x *BoardChangeInput) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardChangeInput.ProtoReflect.Descriptor instead.
func (*BoardChangeInput) Descriptor() ([]byte, []int) {
	return file_board_board_proto_rawDescGZIP(), []int{0}
}

func (x *BoardChangeInput) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *BoardChangeInput) GetBoardID() uint64 {
	if x != nil {
		return x.BoardID
	}
	return 0
}

func (x *BoardChangeInput) GetBoardName() string {
	if x != nil {
		return x.BoardName
	}
	return ""
}

func (x *BoardChangeInput) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *BoardChangeInput) GetStar() bool {
	if x != nil {
		return x.Star
	}
	return false
}

type BoardInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  uint64 `protobuf:"varint,1,opt,name=UserID,json=userID,proto3" json:"UserID,omitempty"`
	BoardID uint64 `protobuf:"varint,2,opt,name=BoardID,json=boardID,proto3" json:"BoardID,omitempty"`
}

func (x *BoardInput) Reset() {
	*x = BoardInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_board_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoardInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardInput) ProtoMessage() {}

func (x *BoardInput) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardInput.ProtoReflect.Descriptor instead.
func (*BoardInput) Descriptor() ([]byte, []int) {
	return file_board_board_proto_rawDescGZIP(), []int{1}
}

func (x *BoardInput) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *BoardInput) GetBoardID() uint64 {
	if x != nil {
		return x.BoardID
	}
	return 0
}

type BoardOutside struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardID uint64                      `protobuf:"varint,1,opt,name=BoardID,json=boardID,proto3" json:"BoardID,omitempty"`
	Admin   *profile.UserOutsideShort   `protobuf:"bytes,2,opt,name=Admin,json=admin,proto3" json:"Admin,omitempty"`
	Name    string                      `protobuf:"bytes,3,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Theme   string                      `protobuf:"bytes,4,opt,name=Theme,json=theme,proto3" json:"Theme,omitempty"`
	Star    bool                        `protobuf:"varint,5,opt,name=Star,json=star,proto3" json:"Star,omitempty"`
	Users   []*profile.UserOutsideShort `protobuf:"bytes,6,rep,name=Users,json=users,proto3" json:"Users,omitempty"`
	Cards   []*CardOutside              `protobuf:"bytes,7,rep,name=Cards,json=cards,proto3" json:"Cards,omitempty"`
}

func (x *BoardOutside) Reset() {
	*x = BoardOutside{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_board_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoardOutside) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardOutside) ProtoMessage() {}

func (x *BoardOutside) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardOutside.ProtoReflect.Descriptor instead.
func (*BoardOutside) Descriptor() ([]byte, []int) {
	return file_board_board_proto_rawDescGZIP(), []int{2}
}

func (x *BoardOutside) GetBoardID() uint64 {
	if x != nil {
		return x.BoardID
	}
	return 0
}

func (x *BoardOutside) GetAdmin() *profile.UserOutsideShort {
	if x != nil {
		return x.Admin
	}
	return nil
}

func (x *BoardOutside) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BoardOutside) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *BoardOutside) GetStar() bool {
	if x != nil {
		return x.Star
	}
	return false
}

func (x *BoardOutside) GetUsers() []*profile.UserOutsideShort {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *BoardOutside) GetCards() []*CardOutside {
	if x != nil {
		return x.Cards
	}
	return nil
}

type CardInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  uint64 `protobuf:"varint,1,opt,name=UserID,json=userID,proto3" json:"UserID,omitempty"`
	CardID  uint64 `protobuf:"varint,2,opt,name=CardID,json=cardID,proto3" json:"CardID,omitempty"`
	BoardID uint64 `protobuf:"varint,3,opt,name=BoardID,json=boardID,proto3" json:"BoardID,omitempty"`
	Name    string `protobuf:"bytes,4,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Order   uint32 `protobuf:"varint,5,opt,name=Order,json=order,proto3" json:"Order,omitempty"`
}

func (x *CardInput) Reset() {
	*x = CardInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_board_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardInput) ProtoMessage() {}

func (x *CardInput) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardInput.ProtoReflect.Descriptor instead.
func (*CardInput) Descriptor() ([]byte, []int) {
	return file_board_board_proto_rawDescGZIP(), []int{3}
}

func (x *CardInput) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *CardInput) GetCardID() uint64 {
	if x != nil {
		return x.CardID
	}
	return 0
}

func (x *CardInput) GetBoardID() uint64 {
	if x != nil {
		return x.BoardID
	}
	return 0
}

func (x *CardInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardInput) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type CardOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardID uint64 `protobuf:"varint,1,opt,name=CardID,json=cardID,proto3" json:"CardID,omitempty"`
	Order  uint32 `protobuf:"varint,2,opt,name=Order,json=order,proto3" json:"Order,omitempty"`
}

func (x *CardOrder) Reset() {
	*x = CardOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_board_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardOrder) ProtoMessage() {}

func (x *CardOrder) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardOrder.ProtoReflect.Descriptor instead.
func (*CardOrder) Descriptor() ([]byte, []int) {
	return file_board_board_proto_rawDescGZIP(), []int{4}
}

func (x *CardOrder) GetCardID() uint64 {
	if x != nil {
		return x.CardID
	}
	return 0
}

func (x *CardOrder) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type CardsOrderInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64       `protobuf:"varint,1,opt,name=UserID,json=userID,proto3" json:"UserID,omitempty"`
	Cards  []*CardOrder `protobuf:"bytes,2,rep,name=Cards,json=cards,proto3" json:"Cards,omitempty"`
}

func (x *CardsOrderInput) Reset() {
	*x = CardsOrderInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_board_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardsOrderInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardsOrderInput) ProtoMessage() {}

func (x *CardsOrderInput) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardsOrderInput.ProtoReflect.Descriptor instead.
func (*CardsOrderInput) Descriptor() ([]byte, []int) {
	return file_board_board_proto_rawDescGZIP(), []int{5}
}

func (x *CardsOrderInput) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *CardsOrderInput) GetCards() []*CardOrder {
	if x != nil {
		return x.Cards
	}
	return nil
}

type CardOutside struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardID uint64         `protobuf:"varint,1,opt,name=CardID,json=cardID,proto3" json:"CardID,omitempty"`
	Name   string         `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Order  uint32         `protobuf:"varint,3,opt,name=Order,json=order,proto3" json:"Order,omitempty"`
	Tasks  []*TaskOutside `protobuf:"bytes,4,rep,name=Tasks,json=tasks,proto3" json:"Tasks,omitempty"`
}

func (x *CardOutside) Reset() {
	*x = CardOutside{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_board_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardOutside) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardOutside) ProtoMessage() {}

func (x *CardOutside) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardOutside.ProtoReflect.Descriptor instead.
func (*CardOutside) Descriptor() ([]byte, []int) {
	return file_board_board_proto_rawDescGZIP(), []int{6}
}

func (x *CardOutside) GetCardID() uint64 {
	if x != nil {
		return x.CardID
	}
	return 0
}

func (x *CardOutside) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardOutside) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *CardOutside) GetTasks() []*TaskOutside {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type TaskInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      uint64 `protobuf:"varint,1,opt,name=UserID,json=userID,proto3" json:"UserID,omitempty"`
	TaskID      uint64 `protobuf:"varint,2,opt,name=TaskID,json=taskID,proto3" json:"TaskID,omitempty"`
	CardID      uint64 `protobuf:"varint,3,opt,name=CardID,json=cardID,proto3" json:"CardID,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	Order       uint32 `protobuf:"varint,6,opt,name=Order,json=order,proto3" json:"Order,omitempty"`
}

func (x *TaskInput) Reset() {
	*x = TaskInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_board_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskInput) ProtoMessage() {}

func (x *TaskInput) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskInput.ProtoReflect.Descriptor instead.
func (*TaskInput) Descriptor() ([]byte, []int) {
	return file_board_board_proto_rawDescGZIP(), []int{7}
}

func (x *TaskInput) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *TaskInput) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *TaskInput) GetCardID() uint64 {
	if x != nil {
		return x.CardID
	}
	return 0
}

func (x *TaskInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskInput) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskInput) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type TaskOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=TaskID,json=taskID,proto3" json:"TaskID,omitempty"`
	Order  uint32 `protobuf:"varint,2,opt,name=Order,json=order,proto3" json:"Order,omitempty"`
}

func (x *TaskOrder) Reset() {
	*x = TaskOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_board_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskOrder) ProtoMessage() {}

func (x *TaskOrder) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskOrder.ProtoReflect.Descriptor instead.
func (*TaskOrder) Descriptor() ([]byte, []int) {
	return file_board_board_proto_rawDescGZIP(), []int{8}
}

func (x *TaskOrder) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *TaskOrder) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type TasksOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardID uint64       `protobuf:"varint,1,opt,name=CardID,json=cardID,proto3" json:"CardID,omitempty"`
	Tasks  []*TaskOrder `protobuf:"bytes,2,rep,name=Tasks,json=tasks,proto3" json:"Tasks,omitempty"`
}

func (x *TasksOrder) Reset() {
	*x = TasksOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_board_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TasksOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TasksOrder) ProtoMessage() {}

func (x *TasksOrder) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TasksOrder.ProtoReflect.Descriptor instead.
func (*TasksOrder) Descriptor() ([]byte, []int) {
	return file_board_board_proto_rawDescGZIP(), []int{9}
}

func (x *TasksOrder) GetCardID() uint64 {
	if x != nil {
		return x.CardID
	}
	return 0
}

func (x *TasksOrder) GetTasks() []*TaskOrder {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type TasksOrderInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64        `protobuf:"varint,1,opt,name=UserID,json=userID,proto3" json:"UserID,omitempty"`
	Cards  []*TasksOrder `protobuf:"bytes,2,rep,name=Cards,json=cards,proto3" json:"Cards,omitempty"`
}

func (x *TasksOrderInput) Reset() {
	*x = TasksOrderInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_board_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TasksOrderInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TasksOrderInput) ProtoMessage() {}

func (x *TasksOrderInput) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TasksOrderInput.ProtoReflect.Descriptor instead.
func (*TasksOrderInput) Descriptor() ([]byte, []int) {
	return file_board_board_proto_rawDescGZIP(), []int{10}
}

func (x *TasksOrderInput) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *TasksOrderInput) GetCards() []*TasksOrder {
	if x != nil {
		return x.Cards
	}
	return nil
}

type TaskOutside struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID      uint64 `protobuf:"varint,1,opt,name=TaskID,json=taskID,proto3" json:"TaskID,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	Order       uint32 `protobuf:"varint,4,opt,name=Order,json=order,proto3" json:"Order,omitempty"`
}

func (x *TaskOutside) Reset() {
	*x = TaskOutside{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_board_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskOutside) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskOutside) ProtoMessage() {}

func (x *TaskOutside) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskOutside.ProtoReflect.Descriptor instead.
func (*TaskOutside) Descriptor() ([]byte, []int) {
	return file_board_board_proto_rawDescGZIP(), []int{11}
}

func (x *TaskOutside) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *TaskOutside) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskOutside) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskOutside) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type Nothing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dummy bool `protobuf:"varint,1,opt,name=dummy,proto3" json:"dummy,omitempty"`
}

func (x *Nothing) Reset() {
	*x = Nothing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_board_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nothing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nothing) ProtoMessage() {}

func (x *Nothing) ProtoReflect() protoreflect.Message {
	mi := &file_board_board_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nothing.ProtoReflect.Descriptor instead.
func (*Nothing) Descriptor() ([]byte, []int) {
	return file_board_board_proto_rawDescGZIP(), []int{12}
}

func (x *Nothing) GetDummy() bool {
	if x != nil {
		return x.Dummy
	}
	return false
}

var File_board_board_proto protoreflect.FileDescriptor

var file_board_board_proto_rawDesc = []byte{
	0x0a, 0x11, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x1a,
	0x15, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x10, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x68, 0x65, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x73, 0x74, 0x61, 0x72, 0x22, 0x3e, 0x0a, 0x0a, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x49, 0x44, 0x22, 0x81, 0x02, 0x0a, 0x0c, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4f,
	0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44,
	0x12, 0x34, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52,
	0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x68,
	0x65, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x73, 0x74, 0x61, 0x72, 0x12, 0x34, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x73, 0x69,
	0x64, 0x65, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0x7f, 0x0a, 0x09, 0x43, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x39, 0x0a, 0x09, 0x43, 0x61,
	0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x64, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x2b, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0x7e, 0x0a,
	0x0b, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x61,
	0x72, 0x64, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2d,
	0x0a, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f,
	0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x9f, 0x01,
	0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x61, 0x72,
	0x64, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22,
	0x39, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x51, 0x0a, 0x0a, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44,
	0x12, 0x2b, 0x0a, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x57, 0x0a,
	0x0f, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0x71, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75,
	0x74, 0x73, 0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x1f, 0x0a, 0x07, 0x4e, 0x6f, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x32, 0xcc, 0x07, 0x0a, 0x05, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x12, 0x47, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x73, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x4c, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4f,
	0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65,
	0x12, 0x3a, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x3c, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x75,
	0x74, 0x73, 0x69, 0x64, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x73,
	0x69, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a,
	0x0f, 0x43, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x12, 0x3c, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65,
	0x12, 0x39, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4e, 0x6f, 0x74, 0x68,
	0x69, 0x6e, 0x67, 0x12, 0x44, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_board_board_proto_rawDescOnce sync.Once
	file_board_board_proto_rawDescData = file_board_board_proto_rawDesc
)

func file_board_board_proto_rawDescGZIP() []byte {
	file_board_board_proto_rawDescOnce.Do(func() {
		file_board_board_proto_rawDescData = protoimpl.X.CompressGZIP(file_board_board_proto_rawDescData)
	})
	return file_board_board_proto_rawDescData
}

var file_board_board_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_board_board_proto_goTypes = []interface{}{
	(*BoardChangeInput)(nil),           // 0: protoBoard.BoardChangeInput
	(*BoardInput)(nil),                 // 1: protoBoard.BoardInput
	(*BoardOutside)(nil),               // 2: protoBoard.BoardOutside
	(*CardInput)(nil),                  // 3: protoBoard.CardInput
	(*CardOrder)(nil),                  // 4: protoBoard.CardOrder
	(*CardsOrderInput)(nil),            // 5: protoBoard.CardsOrderInput
	(*CardOutside)(nil),                // 6: protoBoard.CardOutside
	(*TaskInput)(nil),                  // 7: protoBoard.TaskInput
	(*TaskOrder)(nil),                  // 8: protoBoard.TaskOrder
	(*TasksOrder)(nil),                 // 9: protoBoard.TasksOrder
	(*TasksOrderInput)(nil),            // 10: protoBoard.TasksOrderInput
	(*TaskOutside)(nil),                // 11: protoBoard.TaskOutside
	(*Nothing)(nil),                    // 12: protoBoard.Nothing
	(*profile.UserOutsideShort)(nil),   // 13: protoProfile.UserOutsideShort
	(*profile.UserID)(nil),             // 14: protoProfile.UserID
	(*profile.BoardsOutsideShort)(nil), // 15: protoProfile.BoardsOutsideShort
	(*profile.BoardOutsideShort)(nil),  // 16: protoProfile.BoardOutsideShort
}
var file_board_board_proto_depIdxs = []int32{
	13, // 0: protoBoard.BoardOutside.Admin:type_name -> protoProfile.UserOutsideShort
	13, // 1: protoBoard.BoardOutside.Users:type_name -> protoProfile.UserOutsideShort
	6,  // 2: protoBoard.BoardOutside.Cards:type_name -> protoBoard.CardOutside
	4,  // 3: protoBoard.CardsOrderInput.Cards:type_name -> protoBoard.CardOrder
	11, // 4: protoBoard.CardOutside.Tasks:type_name -> protoBoard.TaskOutside
	8,  // 5: protoBoard.TasksOrder.Tasks:type_name -> protoBoard.TaskOrder
	9,  // 6: protoBoard.TasksOrderInput.Cards:type_name -> protoBoard.TasksOrder
	14, // 7: protoBoard.Board.GetBoardsList:input_type -> protoProfile.UserID
	0,  // 8: protoBoard.Board.CreateBoard:input_type -> protoBoard.BoardChangeInput
	1,  // 9: protoBoard.Board.GetBoard:input_type -> protoBoard.BoardInput
	0,  // 10: protoBoard.Board.ChangeBoard:input_type -> protoBoard.BoardChangeInput
	1,  // 11: protoBoard.Board.DeleteBoard:input_type -> protoBoard.BoardInput
	3,  // 12: protoBoard.Board.CreateCard:input_type -> protoBoard.CardInput
	3,  // 13: protoBoard.Board.GetCard:input_type -> protoBoard.CardInput
	3,  // 14: protoBoard.Board.ChangeCard:input_type -> protoBoard.CardInput
	3,  // 15: protoBoard.Board.DeleteCard:input_type -> protoBoard.CardInput
	5,  // 16: protoBoard.Board.CardOrderChange:input_type -> protoBoard.CardsOrderInput
	7,  // 17: protoBoard.Board.CreateTask:input_type -> protoBoard.TaskInput
	7,  // 18: protoBoard.Board.GetTask:input_type -> protoBoard.TaskInput
	7,  // 19: protoBoard.Board.ChangeTask:input_type -> protoBoard.TaskInput
	7,  // 20: protoBoard.Board.DeleteTask:input_type -> protoBoard.TaskInput
	10, // 21: protoBoard.Board.TasksOrderChange:input_type -> protoBoard.TasksOrderInput
	15, // 22: protoBoard.Board.GetBoardsList:output_type -> protoProfile.BoardsOutsideShort
	16, // 23: protoBoard.Board.CreateBoard:output_type -> protoProfile.BoardOutsideShort
	2,  // 24: protoBoard.Board.GetBoard:output_type -> protoBoard.BoardOutside
	2,  // 25: protoBoard.Board.ChangeBoard:output_type -> protoBoard.BoardOutside
	12, // 26: protoBoard.Board.DeleteBoard:output_type -> protoBoard.Nothing
	6,  // 27: protoBoard.Board.CreateCard:output_type -> protoBoard.CardOutside
	6,  // 28: protoBoard.Board.GetCard:output_type -> protoBoard.CardOutside
	6,  // 29: protoBoard.Board.ChangeCard:output_type -> protoBoard.CardOutside
	12, // 30: protoBoard.Board.DeleteCard:output_type -> protoBoard.Nothing
	12, // 31: protoBoard.Board.CardOrderChange:output_type -> protoBoard.Nothing
	11, // 32: protoBoard.Board.CreateTask:output_type -> protoBoard.TaskOutside
	11, // 33: protoBoard.Board.GetTask:output_type -> protoBoard.TaskOutside
	11, // 34: protoBoard.Board.ChangeTask:output_type -> protoBoard.TaskOutside
	12, // 35: protoBoard.Board.DeleteTask:output_type -> protoBoard.Nothing
	12, // 36: protoBoard.Board.TasksOrderChange:output_type -> protoBoard.Nothing
	22, // [22:37] is the sub-list for method output_type
	7,  // [7:22] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_board_board_proto_init() }
func file_board_board_proto_init() {
	if File_board_board_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_board_board_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoardChangeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_board_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoardInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_board_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoardOutside); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_board_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_board_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_board_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardsOrderInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_board_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardOutside); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_board_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_board_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_board_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TasksOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_board_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TasksOrderInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_board_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskOutside); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_board_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nothing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_board_board_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_board_board_proto_goTypes,
		DependencyIndexes: file_board_board_proto_depIdxs,
		MessageInfos:      file_board_board_proto_msgTypes,
	}.Build()
	File_board_board_proto = out.File
	file_board_board_proto_rawDesc = nil
	file_board_board_proto_goTypes = nil
	file_board_board_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BoardClient is the client API for Board service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BoardClient interface {
	GetBoardsList(ctx context.Context, in *profile.UserID, opts ...grpc.CallOption) (*profile.BoardsOutsideShort, error)
	CreateBoard(ctx context.Context, in *BoardChangeInput, opts ...grpc.CallOption) (*profile.BoardOutsideShort, error)
	GetBoard(ctx context.Context, in *BoardInput, opts ...grpc.CallOption) (*BoardOutside, error)
	ChangeBoard(ctx context.Context, in *BoardChangeInput, opts ...grpc.CallOption) (*BoardOutside, error)
	DeleteBoard(ctx context.Context, in *BoardInput, opts ...grpc.CallOption) (*Nothing, error)
	CreateCard(ctx context.Context, in *CardInput, opts ...grpc.CallOption) (*CardOutside, error)
	GetCard(ctx context.Context, in *CardInput, opts ...grpc.CallOption) (*CardOutside, error)
	ChangeCard(ctx context.Context, in *CardInput, opts ...grpc.CallOption) (*CardOutside, error)
	DeleteCard(ctx context.Context, in *CardInput, opts ...grpc.CallOption) (*Nothing, error)
	CardOrderChange(ctx context.Context, in *CardsOrderInput, opts ...grpc.CallOption) (*Nothing, error)
	CreateTask(ctx context.Context, in *TaskInput, opts ...grpc.CallOption) (*TaskOutside, error)
	GetTask(ctx context.Context, in *TaskInput, opts ...grpc.CallOption) (*TaskOutside, error)
	ChangeTask(ctx context.Context, in *TaskInput, opts ...grpc.CallOption) (*TaskOutside, error)
	DeleteTask(ctx context.Context, in *TaskInput, opts ...grpc.CallOption) (*Nothing, error)
	TasksOrderChange(ctx context.Context, in *TasksOrderInput, opts ...grpc.CallOption) (*Nothing, error)
}

type boardClient struct {
	cc grpc.ClientConnInterface
}

func NewBoardClient(cc grpc.ClientConnInterface) BoardClient {
	return &boardClient{cc}
}

func (c *boardClient) GetBoardsList(ctx context.Context, in *profile.UserID, opts ...grpc.CallOption) (*profile.BoardsOutsideShort, error) {
	out := new(profile.BoardsOutsideShort)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/GetBoardsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardClient) CreateBoard(ctx context.Context, in *BoardChangeInput, opts ...grpc.CallOption) (*profile.BoardOutsideShort, error) {
	out := new(profile.BoardOutsideShort)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/CreateBoard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardClient) GetBoard(ctx context.Context, in *BoardInput, opts ...grpc.CallOption) (*BoardOutside, error) {
	out := new(BoardOutside)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/GetBoard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardClient) ChangeBoard(ctx context.Context, in *BoardChangeInput, opts ...grpc.CallOption) (*BoardOutside, error) {
	out := new(BoardOutside)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/ChangeBoard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardClient) DeleteBoard(ctx context.Context, in *BoardInput, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/DeleteBoard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardClient) CreateCard(ctx context.Context, in *CardInput, opts ...grpc.CallOption) (*CardOutside, error) {
	out := new(CardOutside)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/CreateCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardClient) GetCard(ctx context.Context, in *CardInput, opts ...grpc.CallOption) (*CardOutside, error) {
	out := new(CardOutside)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/GetCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardClient) ChangeCard(ctx context.Context, in *CardInput, opts ...grpc.CallOption) (*CardOutside, error) {
	out := new(CardOutside)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/ChangeCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardClient) DeleteCard(ctx context.Context, in *CardInput, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/DeleteCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardClient) CardOrderChange(ctx context.Context, in *CardsOrderInput, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/CardOrderChange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardClient) CreateTask(ctx context.Context, in *TaskInput, opts ...grpc.CallOption) (*TaskOutside, error) {
	out := new(TaskOutside)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardClient) GetTask(ctx context.Context, in *TaskInput, opts ...grpc.CallOption) (*TaskOutside, error) {
	out := new(TaskOutside)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardClient) ChangeTask(ctx context.Context, in *TaskInput, opts ...grpc.CallOption) (*TaskOutside, error) {
	out := new(TaskOutside)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/ChangeTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardClient) DeleteTask(ctx context.Context, in *TaskInput, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *boardClient) TasksOrderChange(ctx context.Context, in *TasksOrderInput, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/protoBoard.Board/TasksOrderChange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BoardServer is the server API for Board service.
type BoardServer interface {
	GetBoardsList(context.Context, *profile.UserID) (*profile.BoardsOutsideShort, error)
	CreateBoard(context.Context, *BoardChangeInput) (*profile.BoardOutsideShort, error)
	GetBoard(context.Context, *BoardInput) (*BoardOutside, error)
	ChangeBoard(context.Context, *BoardChangeInput) (*BoardOutside, error)
	DeleteBoard(context.Context, *BoardInput) (*Nothing, error)
	CreateCard(context.Context, *CardInput) (*CardOutside, error)
	GetCard(context.Context, *CardInput) (*CardOutside, error)
	ChangeCard(context.Context, *CardInput) (*CardOutside, error)
	DeleteCard(context.Context, *CardInput) (*Nothing, error)
	CardOrderChange(context.Context, *CardsOrderInput) (*Nothing, error)
	CreateTask(context.Context, *TaskInput) (*TaskOutside, error)
	GetTask(context.Context, *TaskInput) (*TaskOutside, error)
	ChangeTask(context.Context, *TaskInput) (*TaskOutside, error)
	DeleteTask(context.Context, *TaskInput) (*Nothing, error)
	TasksOrderChange(context.Context, *TasksOrderInput) (*Nothing, error)
}

// UnimplementedBoardServer can be embedded to have forward compatible implementations.
type UnimplementedBoardServer struct {
}

func (*UnimplementedBoardServer) GetBoardsList(context.Context, *profile.UserID) (*profile.BoardsOutsideShort, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBoardsList not implemented")
}
func (*UnimplementedBoardServer) CreateBoard(context.Context, *BoardChangeInput) (*profile.BoardOutsideShort, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBoard not implemented")
}
func (*UnimplementedBoardServer) GetBoard(context.Context, *BoardInput) (*BoardOutside, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBoard not implemented")
}
func (*UnimplementedBoardServer) ChangeBoard(context.Context, *BoardChangeInput) (*BoardOutside, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeBoard not implemented")
}
func (*UnimplementedBoardServer) DeleteBoard(context.Context, *BoardInput) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBoard not implemented")
}
func (*UnimplementedBoardServer) CreateCard(context.Context, *CardInput) (*CardOutside, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCard not implemented")
}
func (*UnimplementedBoardServer) GetCard(context.Context, *CardInput) (*CardOutside, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCard not implemented")
}
func (*UnimplementedBoardServer) ChangeCard(context.Context, *CardInput) (*CardOutside, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeCard not implemented")
}
func (*UnimplementedBoardServer) DeleteCard(context.Context, *CardInput) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCard not implemented")
}
func (*UnimplementedBoardServer) CardOrderChange(context.Context, *CardsOrderInput) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardOrderChange not implemented")
}
func (*UnimplementedBoardServer) CreateTask(context.Context, *TaskInput) (*TaskOutside, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedBoardServer) GetTask(context.Context, *TaskInput) (*TaskOutside, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTask not implemented")
}
func (*UnimplementedBoardServer) ChangeTask(context.Context, *TaskInput) (*TaskOutside, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeTask not implemented")
}
func (*UnimplementedBoardServer) DeleteTask(context.Context, *TaskInput) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTask not implemented")
}
func (*UnimplementedBoardServer) TasksOrderChange(context.Context, *TasksOrderInput) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TasksOrderChange not implemented")
}

func RegisterBoardServer(s *grpc.Server, srv BoardServer) {
	s.RegisterService(&_Board_serviceDesc, srv)
}

func _Board_GetBoardsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(profile.UserID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).GetBoardsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/GetBoardsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).GetBoardsList(ctx, req.(*profile.UserID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Board_CreateBoard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BoardChangeInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).CreateBoard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/CreateBoard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).CreateBoard(ctx, req.(*BoardChangeInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Board_GetBoard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BoardInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).GetBoard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/GetBoard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).GetBoard(ctx, req.(*BoardInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Board_ChangeBoard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BoardChangeInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).ChangeBoard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/ChangeBoard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).ChangeBoard(ctx, req.(*BoardChangeInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Board_DeleteBoard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BoardInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).DeleteBoard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/DeleteBoard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).DeleteBoard(ctx, req.(*BoardInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Board_CreateCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).CreateCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/CreateCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).CreateCard(ctx, req.(*CardInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Board_GetCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).GetCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/GetCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).GetCard(ctx, req.(*CardInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Board_ChangeCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).ChangeCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/ChangeCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).ChangeCard(ctx, req.(*CardInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Board_DeleteCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).DeleteCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/DeleteCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).DeleteCard(ctx, req.(*CardInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Board_CardOrderChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardsOrderInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).CardOrderChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/CardOrderChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).CardOrderChange(ctx, req.(*CardsOrderInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Board_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).CreateTask(ctx, req.(*TaskInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Board_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).GetTask(ctx, req.(*TaskInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Board_ChangeTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).ChangeTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/ChangeTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).ChangeTask(ctx, req.(*TaskInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Board_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).DeleteTask(ctx, req.(*TaskInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Board_TasksOrderChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TasksOrderInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoardServer).TasksOrderChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoBoard.Board/TasksOrderChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoardServer).TasksOrderChange(ctx, req.(*TasksOrderInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _Board_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protoBoard.Board",
	HandlerType: (*BoardServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBoardsList",
			Handler:    _Board_GetBoardsList_Handler,
		},
		{
			MethodName: "CreateBoard",
			Handler:    _Board_CreateBoard_Handler,
		},
		{
			MethodName: "GetBoard",
			Handler:    _Board_GetBoard_Handler,
		},
		{
			MethodName: "ChangeBoard",
			Handler:    _Board_ChangeBoard_Handler,
		},
		{
			MethodName: "DeleteBoard",
			Handler:    _Board_DeleteBoard_Handler,
		},
		{
			MethodName: "CreateCard",
			Handler:    _Board_CreateCard_Handler,
		},
		{
			MethodName: "GetCard",
			Handler:    _Board_GetCard_Handler,
		},
		{
			MethodName: "ChangeCard",
			Handler:    _Board_ChangeCard_Handler,
		},
		{
			MethodName: "DeleteCard",
			Handler:    _Board_DeleteCard_Handler,
		},
		{
			MethodName: "CardOrderChange",
			Handler:    _Board_CardOrderChange_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _Board_CreateTask_Handler,
		},
		{
			MethodName: "GetTask",
			Handler:    _Board_GetTask_Handler,
		},
		{
			MethodName: "ChangeTask",
			Handler:    _Board_ChangeTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _Board_DeleteTask_Handler,
		},
		{
			MethodName: "TasksOrderChange",
			Handler:    _Board_TasksOrderChange_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "board/board.proto",
}
